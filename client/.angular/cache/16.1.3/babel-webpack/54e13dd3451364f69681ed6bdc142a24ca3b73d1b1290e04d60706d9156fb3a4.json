{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../core/services/authentication.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction SignupComponent_p_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 11);\n    i0.ɵɵtext(1, \" First name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_p_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 11);\n    i0.ɵɵtext(1, \" Last name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_p_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 11);\n    i0.ɵɵtext(1, \" Email is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_p_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 11);\n    i0.ɵɵtext(1, \" Password is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class SignupComponent {\n  constructor(formBuilder, authService, router) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.router = router;\n    this.registrationForm = this.formBuilder.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n    this.getSignupValuesFromForm = () => {\n      const signupRequest = {\n        firstName: this.registrationForm.value.firstName,\n        lastName: this.registrationForm.value.lastName,\n        email: this.registrationForm.value.email,\n        password: this.registrationForm.value.password\n      };\n      return signupRequest;\n    };\n    this.submitSignupForm = () => {\n      const request = this.getSignupValuesFromForm();\n      this.authService.submitSignUpRequest(request).subscribe({\n        next: response => {\n          // Handle successful response \n          // Should redirect to login page\n          console.log('Registration successful:', response);\n          this.router.navigate(['/signin']);\n        },\n        error: error => {\n          // Handle error\n          // Api will return an error object\n          console.error('Registration failed:', error);\n        }\n      });\n    };\n  }\n  ngOnInit() {\n    this.authService.getAdminRole().subscribe(response => this.adminRole = response);\n  }\n}\nSignupComponent.ɵfac = function SignupComponent_Factory(t) {\n  return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthenticationService), i0.ɵɵdirectiveInject(i3.Router));\n};\nSignupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignupComponent,\n  selectors: [[\"app-signup\"]],\n  decls: 32,\n  vars: 5,\n  consts: [[1, \"row\", \"w-100\", \"form-title\"], [1, \"row\", \"form-body\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"form-field-row\"], [\"for\", \"\"], [\"type\", \"text\", \"formControlName\", \"firstName\", 1, \"form-input\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"lastName\"], [\"type\", \"text\", \"formControlName\", \"email\"], [\"type\", \"password\", \"formControlName\", \"password\"], [1, \"signup-button\"], [1, \"row\", \"form-field-row\", \"loggin-option-field\"], [1, \"error-message\"]],\n  template: function SignupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Create your account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.submitSignupForm();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵtemplate(8, SignupComponent_p_8_Template, 2, 0, \"p\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 3);\n      i0.ɵɵtext(11, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 6);\n      i0.ɵɵtemplate(13, SignupComponent_p_13_Template, 2, 0, \"p\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 2)(15, \"label\", 3);\n      i0.ɵɵtext(16, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 7);\n      i0.ɵɵtemplate(18, SignupComponent_p_18_Template, 2, 0, \"p\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 2)(20, \"label\", 3);\n      i0.ɵɵtext(21, \"Pasword\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 8);\n      i0.ɵɵtemplate(23, SignupComponent_p_23_Template, 2, 0, \"p\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 2)(25, \"button\", 9);\n      i0.ɵɵtext(26, \"Sign up\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 10)(28, \"small\");\n      i0.ɵɵtext(29, \"Already have an account? \");\n      i0.ɵɵelementStart(30, \"span\");\n      i0.ɵɵtext(31, \"Sign in\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.registrationForm.controls.firstName.touched && (ctx.registrationForm.controls.firstName.errors == null ? null : ctx.registrationForm.controls.firstName.errors[\"required\"]));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.registrationForm.controls.lastName.touched && (ctx.registrationForm.controls.lastName.errors == null ? null : ctx.registrationForm.controls.lastName.errors[\"required\"]));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.registrationForm.controls.email.touched && (ctx.registrationForm.controls.email.errors == null ? null : ctx.registrationForm.controls.email.errors[\"required\"]));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.registrationForm.controls.password.touched && (ctx.registrationForm.controls.password.errors == null ? null : ctx.registrationForm.controls.password.errors[\"required\"]));\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","SignupComponent","constructor","formBuilder","authService","router","registrationForm","group","firstName","required","lastName","email","password","getSignupValuesFromForm","signupRequest","value","submitSignupForm","request","submitSignUpRequest","subscribe","next","response","console","log","navigate","error","ngOnInit","getAdminRole","adminRole","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthenticationService","i3","Router","selectors","decls","vars","consts","template","SignupComponent_Template","rf","ctx","ɵɵlistener","SignupComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵtemplate","SignupComponent_p_8_Template","SignupComponent_p_13_Template","SignupComponent_p_18_Template","SignupComponent_p_23_Template","ɵɵadvance","ɵɵproperty","controls","touched","errors"],"sources":["C:\\Users\\bogdan.aldea\\Desktop\\Client\\src\\app\\features\\authentication\\signup\\signup.component.ts","C:\\Users\\bogdan.aldea\\Desktop\\Client\\src\\app\\features\\authentication\\signup\\signup.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SignupRequest } from '../core/interfaces/signup-request';\nimport { AuthenticationService } from '../core/services/authentication.service';\nimport { AdminRole } from '../core/interfaces/admin-role';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  private adminRole: AdminRole | undefined;\n  \n  public constructor(private formBuilder: FormBuilder,\n    private authService: AuthenticationService,\n    private router: Router) {}\n  \n  \n    public ngOnInit(): void {\n      this.authService.getAdminRole()\n      .subscribe((response: AdminRole) => this.adminRole = response)\n  }\n\n    public registrationForm = this.formBuilder.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    })\n\n    public getSignupValuesFromForm = () : SignupRequest => {\n      const signupRequest: SignupRequest = {\n        firstName: this.registrationForm.value.firstName!,\n        lastName: this.registrationForm.value.lastName!,\n        email: this.registrationForm.value.email!,\n        password: this.registrationForm.value.password!\n      }\n  \n      return signupRequest;\n    }\n\n    public submitSignupForm = () => {\n      const request: SignupRequest = this.getSignupValuesFromForm();\n      this.authService.submitSignUpRequest(request)\n      .subscribe({\n        next: response => {\n          // Handle successful response \n          // Should redirect to login page\n          console.log('Registration successful:', response);\n          this.router.navigate(['/signin']);\n        },\n        error: error => {\n          // Handle error\n          // Api will return an error object\n          console.error('Registration failed:', error);\n        }\n      });\n    }\n}\n","<div class=\"row w-100 form-title\">\n    <h1>Create your account</h1>\n\n        <form [formGroup]='registrationForm' (ngSubmit)=\"submitSignupForm()\" class=\"row form-body\">\n\n            <div class=\"row form-field-row\">\n                <label for=\"\">First Name</label>\n                <input class=\"form-input\" type=\"text\" formControlName=\"firstName\">\n                <p class=\"error-message\" *ngIf=\"registrationForm.controls.firstName.touched && registrationForm.controls.firstName.errors?.['required']\">\n                    First name is required.\n                </p>\n            </div>\n        \n            <div class=\"row form-field-row\">\n                <label for=\"\">Last Name</label>\n                <input type=\"text\" formControlName=\"lastName\">\n                <p class=\"error-message\" *ngIf=\"registrationForm.controls.lastName.touched && registrationForm.controls.lastName.errors?.['required']\">\n                    Last name is required.\n                </p>\n            </div>\n        \n            <div class=\"row form-field-row\">\n                <label for=\"\">Email</label>\n                <input type=\"text\" formControlName=\"email\">\n                <p class=\"error-message\" *ngIf=\"registrationForm.controls.email.touched && registrationForm.controls.email.errors?.['required']\">\n                    Email is required.\n                </p>\n            </div>\n        \n            <div class=\"row form-field-row\">\n                <label for=\"\">Pasword</label>\n                <input type=\"password\" formControlName=\"password\">\n                <p class=\"error-message\" *ngIf=\"registrationForm.controls.password.touched && registrationForm.controls.password.errors?.['required']\">\n                    Password is required.\n                </p>\n            </div>\n        \n            <div class=\"row form-field-row\">\n                <button class=\"signup-button\">Sign up</button>\n            </div>\n        \n            <div class=\"row form-field-row loggin-option-field\">\n                <small>Already have an account?\n                    <span>Sign in</span>\n                </small>\n            </div>\n        </form>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}