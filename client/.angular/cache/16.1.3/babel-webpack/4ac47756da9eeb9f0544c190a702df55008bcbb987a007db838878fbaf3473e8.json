{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../core/services/authentication.service\";\nimport * as i3 from \"@angular/router\";\nexport class SignupComponent {\n  constructor(formBuilder, authService, router) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.router = router;\n    this.registrationForm = this.formBuilder.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n    this.getSignupValuesFromForm = () => {\n      const signupRequest = {\n        firstName: this.registrationForm.value.firstName,\n        lastName: this.registrationForm.value.lastName,\n        email: this.registrationForm.value.email,\n        password: this.registrationForm.value.password\n      };\n      return signupRequest;\n    };\n    this.submitSignupForm = () => {\n      const request = this.getSignupValuesFromForm();\n      this.authService.submitSignUpRequest(request).subscribe({\n        next: response => {\n          // Handle successful response \n          // Should redirect to login page\n          console.log('Registration successful:', response);\n          this.router.navigate(['/signin']);\n        },\n        error: error => {\n          // Handle error\n          // Api will return an error object\n          console.error('Registration failed:', error);\n        }\n      });\n    };\n  }\n}\nSignupComponent.ɵfac = function SignupComponent_Factory(t) {\n  return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthenticationService), i0.ɵɵdirectiveInject(i3.Router));\n};\nSignupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignupComponent,\n  selectors: [[\"app-signup\"]],\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"row\", \"w-100\", \"form-title\"]],\n  template: function SignupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Create your account\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","SignupComponent","constructor","formBuilder","authService","router","registrationForm","group","firstName","required","lastName","email","password","getSignupValuesFromForm","signupRequest","value","submitSignupForm","request","submitSignUpRequest","subscribe","next","response","console","log","navigate","error","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthenticationService","i3","Router","selectors","decls","vars","consts","template","SignupComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\bogdan.aldea\\Desktop\\Client\\src\\app\\features\\authentication\\signup\\signup.component.ts","C:\\Users\\bogdan.aldea\\Desktop\\Client\\src\\app\\features\\authentication\\signup\\signup.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SignupRequest } from '../core/interfaces/signup-request';\nimport { AuthenticationService } from '../core/services/authentication.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent {\n  public constructor(private formBuilder: FormBuilder,\n    private authService: AuthenticationService,\n    private router: Router) {}\n\n    public registrationForm = this.formBuilder.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    })\n\n    public getSignupValuesFromForm = () : SignupRequest => {\n      const signupRequest: SignupRequest = {\n        firstName: this.registrationForm.value.firstName!,\n        lastName: this.registrationForm.value.lastName!,\n        email: this.registrationForm.value.email!,\n        password: this.registrationForm.value.password!\n      }\n  \n      return signupRequest;\n    }\n\n    public submitSignupForm = () => {\n      const request: SignupRequest = this.getSignupValuesFromForm();\n      this.authService.submitSignUpRequest(request)\n      .subscribe({\n        next: response => {\n          // Handle successful response \n          // Should redirect to login page\n          console.log('Registration successful:', response);\n          this.router.navigate(['/signin']);\n        },\n        error: error => {\n          // Handle error\n          // Api will return an error object\n          console.error('Registration failed:', error);\n        }\n      });\n    }\n}\n","<div class=\"row w-100 form-title\">\n    <h1>Create your account</h1>\n</div>\n"],"mappings":"AACA,SAAsBA,UAAU,QAAQ,gBAAgB;;;;;AAUxD,OAAM,MAAOC,eAAe;EAC1BC,YAA2BC,WAAwB,EACzCC,WAAkC,EAClCC,MAAc;IAFG,KAAAF,WAAW,GAAXA,WAAW;IAC5B,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IAEP,KAAAC,gBAAgB,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MAC/CC,SAAS,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,CAAC,CAAC;MACtCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,CAAC,CAAC;MACrCE,KAAK,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACW,KAAK,CAAC,CAAC;MACpDC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACS,QAAQ,CAAC;KACrC,CAAC;IAEK,KAAAI,uBAAuB,GAAG,MAAqB;MACpD,MAAMC,aAAa,GAAkB;QACnCN,SAAS,EAAE,IAAI,CAACF,gBAAgB,CAACS,KAAK,CAACP,SAAU;QACjDE,QAAQ,EAAE,IAAI,CAACJ,gBAAgB,CAACS,KAAK,CAACL,QAAS;QAC/CC,KAAK,EAAE,IAAI,CAACL,gBAAgB,CAACS,KAAK,CAACJ,KAAM;QACzCC,QAAQ,EAAE,IAAI,CAACN,gBAAgB,CAACS,KAAK,CAACH;OACvC;MAED,OAAOE,aAAa;IACtB,CAAC;IAEM,KAAAE,gBAAgB,GAAG,MAAK;MAC7B,MAAMC,OAAO,GAAkB,IAAI,CAACJ,uBAAuB,EAAE;MAC7D,IAAI,CAACT,WAAW,CAACc,mBAAmB,CAACD,OAAO,CAAC,CAC5CE,SAAS,CAAC;QACTC,IAAI,EAAEC,QAAQ,IAAG;UACf;UACA;UACAC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAAC;UACjD,IAAI,CAAChB,MAAM,CAACmB,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;QACnC,CAAC;QACDC,KAAK,EAAEA,KAAK,IAAG;UACb;UACA;UACAH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC9C;OACD,CAAC;IACJ,CAAC;EApCwB;;AAHhBxB,eAAe,C;mBAAfA,eAAe,EAAAyB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,qBAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;AAAA;AAAfhC,eAAe,C;QAAfA,eAAe;EAAAiC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCX5Bd,EAAA,CAAAgB,cAAA,aAAkC;MAC1BhB,EAAA,CAAAiB,MAAA,0BAAmB;MAAAjB,EAAA,CAAAkB,YAAA,EAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}